name: 🚀 Build & Deploy to Hostinger

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  build:
    name: 📦 Build React App
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📋 Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: 🔍 Lint Code (Non-blocking)
        run: npm run lint || echo "Lint warnings ignored for deployment"
        continue-on-error: true

      - name: 🏗️ Build Production
        run: npm run build
        env:
          CI: false
          GENERATE_SOURCEMAP: false

      - name: 📄 Add SPA Support
        run: |
          if [ -f "public/.htaccess" ]; then
            cp public/.htaccess build/.htaccess
            echo "✅ .htaccess copied for SPA routing"
          else
            echo "⚠️ No .htaccess found, creating default"
            echo 'RewriteEngine On
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule . /index.html [L]' > build/.htaccess
          fi

      - name: 📊 Build Summary
        run: |
          echo "### 📦 Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Size:** $(du -sh build | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "- **Files Count:** $(find build -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp:** $(date)" >> $GITHUB_STEP_SUMMARY

      - name: 📤 Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-build-${{ github.sha }}
          path: build
          retention-days: 7

  deploy:
    name: 🌐 Deploy to Hostinger
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://aayushmishra.tech
    
    steps:
      - name: 📥 Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: production-build-${{ github.sha }}
          path: build

      - name: 🔍 Verify Build Contents
        run: |
          echo "📁 Build contents:"
          ls -la build/
          echo "📄 Index.html exists: $(test -f build/index.html && echo 'Yes' || echo 'No')"
          echo "📄 .htaccess exists: $(test -f build/.htaccess && echo 'Yes' || echo 'No')"
          echo "📁 Total files: $(find build -type f | wc -l)"

      - name: 🚀 Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ftps
          local-dir: build/
          server-dir: ${{ secrets.FTP_SERVER_DIR }}
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
            **/.DS_Store
            **/Thumbs.db
          dangerous-clean-slate: true
          log-level: verbose
          security: strict

      - name: 🎉 Deployment Summary
        run: |
          echo "### 🎉 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** Production" >> $GITHUB_STEP_SUMMARY
          echo "- **Site URL:** https://aayushmishra.tech" >> $GITHUB_STEP_SUMMARY
          echo "- **Deploy Time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

      - name: 🧹 Cleanup Old Artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: production-build-${{ github.sha }}
          failOnError: false
