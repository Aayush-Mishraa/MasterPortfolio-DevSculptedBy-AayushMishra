name: 🔍 FTP CONNECTION TESTER

on:
  workflow_dispatch:
    inputs:
      test_method:
        description: 'Test Method'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - ftp-only
        - sftp-only

jobs:
  test-connection:
    name: 🧪 Test FTP Connection
    runs-on: ubuntu-latest
    
    steps:
      - name: 📋 Display Current Settings
        run: |
          echo "=== CURRENT FTP SETTINGS ==="
          echo "🌐 FTP Host: ${{ secrets.FTP_HOST }}"
          echo "👤 FTP Username: ${{ secrets.FTP_USERNAME }}"
          echo "🔢 FTP Port: ${{ secrets.FTP_PORT }}"
          echo "📁 Server Directory: ${{ secrets.FTP_SERVER_DIR }}"
          echo "🌍 Site URL: ${{ secrets.SITE_URL }}"
          echo "🔐 Password: [HIDDEN]"

      - name: 🧪 Test FTP Connection (Method 1)
        if: github.event.inputs.test_method == 'all' || github.event.inputs.test_method == 'ftp-only'
        id: test_ftp
        continue-on-error: true
        run: |
          echo "🔍 Testing FTP connection..."
          sudo apt-get update
          sudo apt-get install -y lftp
          
          # Test basic connection
          lftp -e "
          set ftp:ssl-allow no;
          set ftp:passive-mode on;
          set net:timeout 10;
          open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST }};
          pwd;
          ls;
          quit
          " || echo "FTP connection failed"

      - name: 🧪 Test SFTP Connection (Method 2)
        if: github.event.inputs.test_method == 'all' || github.event.inputs.test_method == 'sftp-only'
        id: test_sftp
        continue-on-error: true
        run: |
          echo "🔍 Testing SFTP connection..."
          sudo apt-get install -y sshpass
          
          # Test SFTP connection
          sshpass -p '${{ secrets.FTP_PASSWORD }}' sftp -o StrictHostKeyChecking=no -P 22 ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_HOST }} << 'EOF'
          pwd
          ls
          quit
          EOF

      - name: 🔍 Test Directory Structure
        run: |
          echo "🗂️ Testing directory structure..."
          sudo apt-get install -y lftp
          
          echo "Testing possible directories:"
          for dir in "/public_html/" "/htdocs/" "/domains/aayushmishra.tech/public_html/" "/www/" "/"; do
            echo "📁 Testing directory: $dir"
            lftp -e "
            set ftp:ssl-allow no;
            set ftp:passive-mode on;
            open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST }};
            cd $dir 2>/dev/null && echo 'SUCCESS: $dir exists' || echo 'FAILED: $dir does not exist';
            quit
            " 2>/dev/null || echo "Directory $dir test failed"
          done

      - name: 🌐 Test Current Website
        run: |
          echo "🌐 Testing current website status..."
          echo "Main site:"
          curl -I ${{ secrets.SITE_URL }} || echo "Main site not accessible"
          echo ""
          echo "Common test paths:"
          curl -I ${{ secrets.SITE_URL }}/index.html || echo "index.html not found"
          curl -I ${{ secrets.SITE_URL }}/test.txt || echo "test.txt not found"

      - name: 📊 Generate Test Report
        if: always()
        run: |
          echo "### 🔍 FTP CONNECTION TEST REPORT" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Test Date**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Settings Tested**:" >> $GITHUB_STEP_SUMMARY
          echo "- Host: ${{ secrets.FTP_HOST }}" >> $GITHUB_STEP_SUMMARY
          echo "- Username: ${{ secrets.FTP_USERNAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- Port: ${{ secrets.FTP_PORT }}" >> $GITHUB_STEP_SUMMARY
          echo "- Directory: ${{ secrets.FTP_SERVER_DIR }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Results**:" >> $GITHUB_STEP_SUMMARY
          echo "- FTP Test: ${{ steps.test_ftp.outcome || 'Not tested' }}" >> $GITHUB_STEP_SUMMARY
          echo "- SFTP Test: ${{ steps.test_sftp.outcome || 'Not tested' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next Steps**: Check the logs above for detailed error messages" >> $GITHUB_STEP_SUMMARY
